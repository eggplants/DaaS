[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool]
[tool.poetry]
authors = ["Tatsuya Abe <averak.jp@gmail.com>"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
]
description = "Dajare as a Service"
keywords = ["japanese", "dajare"]
name = "daas"
packages = [{include = "daas"}]
license = "MIT"
readme = "README.md"
repository = "https://github.com/rits-dajare/DaaS"
version = "1.0.0"  # <- change here if you want to update this package version
include = [
  "daas/config/*.txt",
  "daas/config/*.csv"
]

[tool.poetry.dependencies]
python = ">=3.9,<4"
emoji = "*"
fastapi = "*"
httpx = "^0.24.1"
jaconv = "*"
janome = "*"
kanjize = "*"
mojimoji = "*"
numpy = "*"
parameterized = "*"
pyboin = "*"
pydantic = "*"
python-levenshtein = "*"
requests = "*"
tqdm = "*"
types-emoji = "*"
uvicorn = "*"

[tool.poetry.group.dev.dependencies]
mypy = ">=0.991,<1.6"
pre-commit = ">=2.20,<4.0"
pytest = "*"
taskipy = "^1.10.3"

[tool.poetry.scripts]
daas = "daas.main:main"

[tool.black]
line-length = 120
target-version = ['py39']

[tool.ruff]
select = ["ALL"]
ignore = ["D", "ANN101", "FBT", "PLR"]
line-length = 120

[tool.ruff.per-file-ignores]
"daas/main.py" = [
  "T201", # `print` found
]
"daas/message.py" = [
  "N802", # Function name `...` should be lowercase
]
"daas/api/controller/*_controller.py" = [
  "UP007", # Use `X | Y` for type annotations
  "B008", # Do not perform function call `Depends` in argument defaults
  "B904", # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  "TCH001", # Move application import `daas.api.request.eval_request.EvalRequest` into a type-checking block
  "TRY200", # Use `raise from` to specify exception cause
]
"tests/*test_*.py" = [
  "ANN201",  # Missing return type annotation for public function ...
  "INP001",  # File tests/test_*.py is part of an implicit namespace package. Add an __init__.py.
  "S101", # Use of assert detected
  "N", # pep8-naming
]

[tool.mypy]
pretty = true
python_version = "3.9"
show_error_codes = true
strict = true
plugins = [
  "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.taskipy.tasks]
# Try: `poetry run task <task name>` or just `task <task name>` within `poetry shell`
start = "daas --start"
help = "daas --help"
test = "pytest tests/"
lint = "pre-commit run -a"
